"""empty message

Revision ID: 615aa0a0a1a7
Revises: 219804a1d9e3
Create Date: 2023-09-04 22:59:54.401723

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "615aa0a0a1a7"
down_revision = "219804a1d9e3"
branch_labels = None
depends_on = None


def upgrade():
    # Preprocess
    pre_upgrade()

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "category",
        sa.Column("category_title", sa.String(length=255), nullable=True),
        sa.Column("category_description", sa.String(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(), server_default=sa.FetchedValue(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), server_default=sa.FetchedValue(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), server_default=sa.FetchedValue(), nullable=True),
        sa.Column("id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_category_id"), "category", ["id"], unique=False)
    op.create_table(
        "providercontact",
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("phone", sa.String(length=255), nullable=True),
        sa.Column("email", sa.String(length=255), nullable=True),
        sa.Column("additional_info", sa.Text(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(), server_default=sa.FetchedValue(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), server_default=sa.FetchedValue(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), server_default=sa.FetchedValue(), nullable=True),
        sa.Column("id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_providercontact_id"), "providercontact", ["id"], unique=False)
    op.create_table(
        "providerenity",
        sa.Column("address", sa.String(length=255), nullable=True),
        sa.Column("primary_phone", sa.String(length=255), nullable=True),
        sa.Column("secondary_phone", sa.String(length=255), nullable=True),
        sa.Column("lat", sa.Numeric(precision=8, scale=6), nullable=True),
        sa.Column("lon", sa.Numeric(precision=8, scale=6), nullable=True),
        sa.Column("created_at", sa.DateTime(), server_default=sa.FetchedValue(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), server_default=sa.FetchedValue(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), server_default=sa.FetchedValue(), nullable=True),
        sa.Column("id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_providerenity_id"), "providerenity", ["id"], unique=False)
    op.create_table(
        "providerphoto",
        sa.Column("picture_path", sa.Text(length=255), nullable=True),
        sa.Column("id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_providerphoto_id"), "providerphoto", ["id"], unique=False)
    op.create_table(
        "service",
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("url", sa.String(length=255), nullable=True),
        sa.Column("operating_hours", sa.Text(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(), server_default=sa.FetchedValue(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), server_default=sa.FetchedValue(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), server_default=sa.FetchedValue(), nullable=True),
        sa.Column("id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_service_id"), "service", ["id"], unique=False)
    op.create_table(
        "categoryxservice",
        sa.Column("category", sa.Integer(), nullable=False),
        sa.Column("service", sa.Integer(), nullable=False),
        sa.Column("id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False),
        sa.ForeignKeyConstraint(
            ["category"],
            ["category.id"],
        ),
        sa.ForeignKeyConstraint(
            ["service"],
            ["service.id"],
        ),
        sa.PrimaryKeyConstraint("category", "service", "id"),
    )
    op.create_index(op.f("ix_categoryxservice_id"), "categoryxservice", ["id"], unique=False)
    # ### end Alembic commands ###

    # Postprocess
    post_upgrade()


def downgrade():
    # Preprocess
    pre_downgrade()

    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_categoryxservice_id"), table_name="categoryxservice")
    op.drop_table("categoryxservice")
    op.drop_index(op.f("ix_service_id"), table_name="service")
    op.drop_table("service")
    op.drop_index(op.f("ix_providerphoto_id"), table_name="providerphoto")
    op.drop_table("providerphoto")
    op.drop_index(op.f("ix_providerenity_id"), table_name="providerenity")
    op.drop_table("providerenity")
    op.drop_index(op.f("ix_providercontact_id"), table_name="providercontact")
    op.drop_table("providercontact")
    op.drop_index(op.f("ix_category_id"), table_name="category")
    op.drop_table("category")
    # ### end Alembic commands ###

    # Postprocess
    post_downgrade()


def pre_upgrade():
    # Processing before upgrading the schema
    pass


def post_upgrade():
    # Processing after upgrading the schema
    pass


def pre_downgrade():
    # Processing before downgrading the schema
    pass


def post_downgrade():
    # Processing after downgrading the schema
    pass
