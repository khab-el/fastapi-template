"""empty message

Revision ID: 33a3b8cd3101
Revises: 
Create Date: 2024-01-13 16:01:47.723332

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import FetchedValue


# revision identifiers, used by Alembic.
revision = "33a3b8cd3101"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # Preprocess
    pre_upgrade()

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "category",
        sa.Column("category_title", sa.String(length=255), nullable=True),
        sa.Column("category_description", sa.String(length=255), nullable=True),
        sa.Column("parent_category_id", sa.UUID(), nullable=True),
        sa.Column("created_at", sa.DateTime(), server_default=FetchedValue(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), server_default=FetchedValue(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(), server_default=FetchedValue(), nullable=True),
        sa.Column("id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False),
        sa.ForeignKeyConstraint(
            ["parent_category_id"],
            ["category.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_category_id"), "category", ["id"], unique=False)
    op.create_table(
        "providercontact",
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("phone", sa.String(length=255), nullable=True),
        sa.Column("email", sa.String(length=255), nullable=True),
        sa.Column("additional_info", sa.String(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(), server_default=FetchedValue(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), server_default=FetchedValue(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(), server_default=FetchedValue(), nullable=True),
        sa.Column("id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_providercontact_id"), "providercontact", ["id"], unique=False)
    op.create_table(
        "user",
        sa.Column("username", sa.String(length=255), nullable=False),
        sa.Column("phone", sa.String(length=255), nullable=True),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("created_at", sa.DateTime(), server_default=FetchedValue(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), server_default=FetchedValue(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(), server_default=FetchedValue(), nullable=True),
        sa.Column("id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("username"),
    )
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=False)
    op.create_index(op.f("ix_user_id"), "user", ["id"], unique=False)
    op.create_table(
        "providerenity",
        sa.Column("address", sa.String(length=255), nullable=True),
        sa.Column("primary_phone", sa.String(length=255), nullable=True),
        sa.Column("secondary_phone", sa.String(length=255), nullable=True),
        sa.Column("lat", sa.Numeric(precision=8, scale=6), nullable=True),
        sa.Column("lon", sa.Numeric(precision=8, scale=6), nullable=True),
        sa.Column("provider_contact_id", sa.UUID(), nullable=True),
        sa.Column("created_at", sa.DateTime(), server_default=FetchedValue(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), server_default=FetchedValue(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(), server_default=FetchedValue(), nullable=True),
        sa.Column("id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False),
        sa.ForeignKeyConstraint(
            ["provider_contact_id"],
            ["providercontact.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_providerenity_id"), "providerenity", ["id"], unique=False)
    op.create_table(
        "providerphoto",
        sa.Column("picture_path", sa.String(length=255), nullable=True),
        sa.Column("provider_contact_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False),
        sa.ForeignKeyConstraint(
            ["provider_contact_id"],
            ["providercontact.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_providerphoto_id"), "providerphoto", ["id"], unique=False)
    op.create_table(
        "service",
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("url", sa.String(length=255), nullable=True),
        sa.Column("operating_hours", sa.String(length=255), nullable=True),
        sa.Column("provider_entity_id", sa.UUID(), nullable=True),
        sa.Column("created_at", sa.DateTime(), server_default=FetchedValue(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), server_default=FetchedValue(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(), server_default=FetchedValue(), nullable=True),
        sa.Column("id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False),
        sa.ForeignKeyConstraint(
            ["provider_entity_id"],
            ["providerenity.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_service_id"), "service", ["id"], unique=False)
    op.create_table(
        "category_x_service",
        sa.Column("category_id", sa.UUID(), nullable=False),
        sa.Column("service_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["category.id"],
        ),
        sa.ForeignKeyConstraint(
            ["service_id"],
            ["service.id"],
        ),
        sa.PrimaryKeyConstraint("category_id", "service_id"),
    )
    # ### end Alembic commands ###

    # Postprocess
    post_upgrade()


def downgrade():
    # Preprocess
    pre_downgrade()

    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("category_x_service")
    op.drop_index(op.f("ix_service_id"), table_name="service")
    op.drop_table("service")
    op.drop_index(op.f("ix_providerphoto_id"), table_name="providerphoto")
    op.drop_table("providerphoto")
    op.drop_index(op.f("ix_providerenity_id"), table_name="providerenity")
    op.drop_table("providerenity")
    op.drop_index(op.f("ix_user_id"), table_name="user")
    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.drop_table("user")
    op.drop_index(op.f("ix_providercontact_id"), table_name="providercontact")
    op.drop_table("providercontact")
    op.drop_index(op.f("ix_category_id"), table_name="category")
    op.drop_table("category")
    # ### end Alembic commands ###

    # Postprocess
    post_downgrade()


def pre_upgrade():
    # Processing before upgrading the schema
    pass


def post_upgrade():
    # Processing after upgrading the schema
    pass


def pre_downgrade():
    # Processing before downgrading the schema
    pass


def post_downgrade():
    # Processing after downgrading the schema
    pass
